[{"C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\index.js":"1","C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\App.js":"2","C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\components\\SimpleInput.js":"3","C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\components\\BasicForm.js":"4","C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\hooks\\use-input.js":"5"},{"size":142,"mtime":1616617486000,"results":"6","hashOfConfig":"7"},{"size":217,"mtime":1626907568873,"results":"8","hashOfConfig":"7"},{"size":2242,"mtime":1626907525009,"results":"9","hashOfConfig":"7"},{"size":3142,"mtime":1626909003088,"results":"10","hashOfConfig":"7"},{"size":1204,"mtime":1626910214533,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"ddgrx0",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\index.js",[],["24","25"],"C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\App.js",[],"C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\components\\SimpleInput.js",[],"C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\components\\BasicForm.js",["26"],"// import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst nameValidation = (name) => name.trim() !== \"\";\nconst emailValidation = (email) => email.trim().includes(\"@\");\n\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(nameValidation);\n\n  const {\n    value: enteredLastName,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(nameValidation);\n\n  const {\n    value: enteredEmail,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(emailValidation);\n\n  let formIsValid = false;\n  if (firstNameIsValid && lastNameIsValid && emailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmitHandler = (event) => {\n    event.preventDefault();\n\n    if (firstNameHasError || lastNameHasError || emailHasError) {\n      return;\n    }\n\n    console.log(enteredFirstName, enteredLastName, enteredEmail);\n\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const firstNameInputClasses = firstNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const lastNameInputClasses = lastNameHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  const emailInputClasses = emailHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameHasError && (\n            <p className=\"error-text\">First Name cannot be empty!</p>\n          )}\n        </div>\n        <div className={lastNameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameHasError && (\n            <p className=\"error-text\">Last Name cannot be empty!</p>\n          )}\n        </div>\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailHasError && <p className=\"error-text\">Email cannot be empty!</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","C:\\Users\\ACK-D\\Desktop\\Code\\Tutorials\\Webdev\\react\\react-complete-guide-udemy\\react-cg-forms\\src\\hooks\\use-input.js",["27"],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":62,"column":9,"nodeType":"34","messageId":"35","endLine":62,"endColumn":26},{"ruleId":"32","severity":1,"message":"36","line":1,"column":10,"nodeType":"34","messageId":"35","endLine":1,"endColumn":18},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'emailInputClasses' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]